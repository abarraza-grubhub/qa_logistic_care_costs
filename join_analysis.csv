cte_name,line_number,join_type,left_table,right_table,left_size,right_size,left_estimated_rows,right_estimated_rows,current_order,join_condition,issue,suggested_order,priority,performance_impact,optimization_notes,index_recommendations
,8,LEFT JOIN,adjustment_reporting,ticket_fact,large,large,5M+,10M+,adjustment_reporting LEFT JOIN ticket_fact,"tf.ticket_id = ar.ticket_id AND tf.ticket_created_Date BETWEEN DATE_ADD('day', -1, DATE '{{start_...",,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Date range condition detected - consider table partitioning by date
,12,LEFT JOIN,ticket_fact,primary_contact_reason,large,small,10M+,<1K,ticket_fact LEFT JOIN primary_contact_reason,pr.contact_reason_id = tf.primary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
,15,LEFT JOIN,primary_contact_reason,secondary_contact_reason,small,small,<1K,<1K,primary_contact_reason LEFT JOIN secondary_contact_reason,sr.contact_reason_id = tf.secondary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
care_fg,48,LEFT JOIN,concession_reporting,ticket_fact,large,large,5M+,10M+,concession_reporting LEFT JOIN ticket_fact,"tf.ticket_id = cr.ticket_id AND tf.ticket_created_Date BETWEEN DATE_ADD('day', -1, DATE '{{start_...",,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Date range condition detected - consider table partitioning by date
care_fg,52,LEFT JOIN,ticket_fact,primary_contact_reason,large,small,10M+,<1K,ticket_fact LEFT JOIN primary_contact_reason,pr.contact_reason_id = tf.primary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
care_fg,55,LEFT JOIN,primary_contact_reason,secondary_contact_reason,small,small,<1K,<1K,primary_contact_reason LEFT JOIN secondary_contact_reason,sr.contact_reason_id = tf.secondary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
cancels,112,LEFT JOIN,order_cancellation_fact,cancellation_reason_map,large,medium,1M+,100K-1M,order_cancellation_fact LEFT JOIN cancellation_reason_map,CAST(crm.cancel_reason_id AS VARCHAR) = CAST(ocf.primary_cancel_reason_id AS VARCHAR),,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
cancels,115,LEFT JOIN,cancellation_reason_map,ticket_fact,medium,large,100K-1M,10M+,cancellation_reason_map LEFT JOIN ticket_fact,tf.ticket_id = CAST(ocf.cancellation_ticket_id AS BIGINT) AND tf.ticket_created_Date BETWEEN DATE...,Large table (ticket_fact) should typically be on the left side of JOIN for better performance,ticket_fact LEFT JOIN cancellation_reason_map,high,High - can significantly reduce query execution time,Moving larger table to left side enables more efficient hash join strategies,Date range condition detected - consider table partitioning by date
cancels,119,LEFT JOIN,ticket_fact,primary_contact_reason,large,small,10M+,<1K,ticket_fact LEFT JOIN primary_contact_reason,pr.contact_reason_id = tf.primary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
cancels,122,LEFT JOIN,primary_contact_reason,secondary_contact_reason,small,small,<1K,<1K,primary_contact_reason LEFT JOIN secondary_contact_reason,sr.contact_reason_id = tf.secondary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
cancels,125,LEFT JOIN,secondary_contact_reason,diner_ss_cancels,small,unknown,<1K,Unknown,secondary_contact_reason LEFT JOIN diner_ss_cancels,ccr.order_uuid = ocf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
contacts,192,LEFT JOIN,ticket_fact,primary_contact_reason,large,small,10M+,<1K,ticket_fact LEFT JOIN primary_contact_reason,pr.contact_reason_id = tf.primary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
contacts,195,LEFT JOIN,primary_contact_reason,secondary_contact_reason,small,small,<1K,<1K,primary_contact_reason LEFT JOIN secondary_contact_reason,sr.contact_reason_id = tf.secondary_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
o,291,JOIN,order_contribution_profit_fact,mdf,large,derived,100M+,Variable,order_contribution_profit_fact JOIN mdf,mdf.order_uuid = cpf.order_uuid,,,low,Low,,Consider index on mdf.order_uuid
o,294,LEFT JOIN,mdf,cancels,derived,unknown,Variable,Unknown,mdf LEFT JOIN cancels,c.order_uuid = cpf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
o,297,LEFT JOIN,cancels,adj,unknown,derived,Unknown,Variable,cancels LEFT JOIN adj,adj.order_uuid = cpf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Consider index on adj.order_uuid
o,300,LEFT JOIN,adj,ghg,derived,derived,Variable,Variable,adj LEFT JOIN ghg,ghg.order_uuid = cpf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Consider index on ghg.order_uuid
o,303,LEFT JOIN,ghg,care_fg,derived,derived,Variable,Variable,ghg LEFT JOIN care_fg,care_fg.order_uuid = cpf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Consider index on care_fg.order_uuid
o,306,LEFT JOIN,care_fg,contacts,derived,derived,Variable,Variable,care_fg LEFT JOIN contacts,contacts.order_uuid = cpf.order_uuid,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Consider index on contacts.order_uuid
o,309,LEFT JOIN,contacts,care_cost_reasons,derived,small,Variable,<100,contacts LEFT JOIN care_cost_reasons,ccr.scr = contacts.latest_contact_reason,,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,Consider index on contacts.latest_contact_reason
o3,428,LEFT JOIN,o2,cancellation_reason_map,derived,medium,Variable,100K-1M,o2 LEFT JOIN cancellation_reason_map,LOWER(crm.cancel_reason_name) = LOWER(o2.adjustment_and_cancel_reason_combined),,,low,Low,LEFT JOIN preserves all rows from left table - consider if INNER JOIN is possible for better performance,
